// Code generated by mockery v2.46.3. DO NOT EDIT.

package mocks

import (
	campaign "github.com/jonesrussell/mp-emailer/campaign"
	mock "github.com/stretchr/testify/mock"
)

// MockClientInterface is an autogenerated mock type for the ClientInterface type
type MockClientInterface struct {
	mock.Mock
}

type MockClientInterface_Expecter struct {
	mock *mock.Mock
}

func (_m *MockClientInterface) EXPECT() *MockClientInterface_Expecter {
	return &MockClientInterface_Expecter{mock: &_m.Mock}
}

// FetchRepresentatives provides a mock function with given fields: postalCode
func (_m *MockClientInterface) FetchRepresentatives(postalCode string) ([]campaign.Representative, error) {
	ret := _m.Called(postalCode)

	if len(ret) == 0 {
		panic("no return value specified for FetchRepresentatives")
	}

	var r0 []campaign.Representative
	var r1 error
	if rf, ok := ret.Get(0).(func(string) ([]campaign.Representative, error)); ok {
		return rf(postalCode)
	}
	if rf, ok := ret.Get(0).(func(string) []campaign.Representative); ok {
		r0 = rf(postalCode)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]campaign.Representative)
		}
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(postalCode)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockClientInterface_FetchRepresentatives_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'FetchRepresentatives'
type MockClientInterface_FetchRepresentatives_Call struct {
	*mock.Call
}

// FetchRepresentatives is a helper method to define mock.On call
//   - postalCode string
func (_e *MockClientInterface_Expecter) FetchRepresentatives(postalCode interface{}) *MockClientInterface_FetchRepresentatives_Call {
	return &MockClientInterface_FetchRepresentatives_Call{Call: _e.mock.On("FetchRepresentatives", postalCode)}
}

func (_c *MockClientInterface_FetchRepresentatives_Call) Run(run func(postalCode string)) *MockClientInterface_FetchRepresentatives_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *MockClientInterface_FetchRepresentatives_Call) Return(_a0 []campaign.Representative, _a1 error) *MockClientInterface_FetchRepresentatives_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockClientInterface_FetchRepresentatives_Call) RunAndReturn(run func(string) ([]campaign.Representative, error)) *MockClientInterface_FetchRepresentatives_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockClientInterface creates a new instance of MockClientInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockClientInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockClientInterface {
	mock := &MockClientInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
