// Code generated by mockery v2.46.3. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// MockServiceInterface is an autogenerated mock type for the ServiceInterface type
type MockServiceInterface struct {
	mock.Mock
}

type MockServiceInterface_Expecter struct {
	mock *mock.Mock
}

func (_m *MockServiceInterface) EXPECT() *MockServiceInterface_Expecter {
	return &MockServiceInterface_Expecter{mock: &_m.Mock}
}

// SendPasswordReset provides a mock function with given fields: _a0, token
func (_m *MockServiceInterface) SendPasswordReset(_a0 string, token string) error {
	ret := _m.Called(_a0, token)

	if len(ret) == 0 {
		panic("no return value specified for SendPasswordReset")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string) error); ok {
		r0 = rf(_a0, token)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockServiceInterface_SendPasswordReset_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SendPasswordReset'
type MockServiceInterface_SendPasswordReset_Call struct {
	*mock.Call
}

// SendPasswordReset is a helper method to define mock.On call
//   - _a0 string
//   - token string
func (_e *MockServiceInterface_Expecter) SendPasswordReset(_a0 interface{}, token interface{}) *MockServiceInterface_SendPasswordReset_Call {
	return &MockServiceInterface_SendPasswordReset_Call{Call: _e.mock.On("SendPasswordReset", _a0, token)}
}

func (_c *MockServiceInterface_SendPasswordReset_Call) Run(run func(_a0 string, token string)) *MockServiceInterface_SendPasswordReset_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(string))
	})
	return _c
}

func (_c *MockServiceInterface_SendPasswordReset_Call) Return(_a0 error) *MockServiceInterface_SendPasswordReset_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockServiceInterface_SendPasswordReset_Call) RunAndReturn(run func(string, string) error) *MockServiceInterface_SendPasswordReset_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockServiceInterface creates a new instance of MockServiceInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockServiceInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockServiceInterface {
	mock := &MockServiceInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
