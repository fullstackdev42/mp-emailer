name: Deploy to Production

on:
  push:
    branches: [ main ]

env:
  REGISTRY: "registry.digitalocean.com/directdiary"
  IMAGE_NAME: "mp-emailer"
  DOCTL_VERSION: "1.117.0"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      # Setup SSH Keys and known_hosts
      - name: Setup SSH Keys and known_hosts
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: |
            ${{ secrets.DO_SSH_KEY }}

      # Cache Go modules
      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-mod-

      # Install doctl
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DOAT }}

      # Check for app changes
      - name: Check for app changes
        id: check_changes
        run: |
          if git diff --quiet HEAD^ HEAD \
            -- '*.go' \
            -- 'database/migrations/*.sql' \
            -- 'database/migrations/*.go' \
            -- 'web/templates/**' \
            -- 'web/src/**' \
            -- 'docker-compose.yml' \
            -- 'Dockerfile' \
            -- 'go.mod' 'go.sum' \
            ':!.github/workflows'; then
            echo "changed=false" >> "$GITHUB_OUTPUT"
          else
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      # Build frontend assets
      - name: Build frontend
        if: steps.check_changes.outputs.changed == 'true'
        working-directory: ./web
        run: |
          npm install
          npm run build

      # Test before building
      - name: Run tests
        if: steps.check_changes.outputs.changed == 'true'
        run: |
          go test ./... -v

      # Build and push image only if there are changes
      - name: Build and push
        if: steps.check_changes.outputs.changed == 'true'
        env:
          DOCKER_BUILDKIT: 1
        run: |
          docker build -t $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7) .
          docker build -t $(echo $REGISTRY)/$(echo $IMAGE_NAME):latest .
          doctl registry login
          docker push $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)
          docker push $(echo $REGISTRY)/$(echo $IMAGE_NAME):latest

      # Deploy to DO droplet
      - name: Deploy to DigitalOcean
        uses: appleboy/ssh-action@v1.1.0
        env:
          REGISTRY: ${{ env.REGISTRY }}
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
          APP_PORT: ${{ secrets.APP_PORT }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
          SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USERNAME }}
          key: ${{ secrets.DO_SSH_KEY }}
          port: 22
          envs: REGISTRY,IMAGE_NAME,APP_PORT,DB_HOST,DB_USER,DB_PASSWORD,DB_NAME,SESSION_SECRET,JWT_SECRET
          script: |
            mkdir -p ~/mp-emailer
            cd ~/mp-emailer
            
            # Export environment variables for docker compose
            export APP_PORT=${APP_PORT:-8080}
            export DB_HOST=${DB_HOST:-db}
            export DB_USER=${DB_USER}
            export DB_PASSWORD=${DB_PASSWORD}
            export DB_NAME=${DB_NAME}
            export SESSION_SECRET=${SESSION_SECRET}
            export JWT_SECRET=${JWT_SECRET}
            
            docker compose down || true
            if [ ! -d .git ]; then
              git clone git@github.com:fullstackdev42/mp-emailer.git .
            else
              git pull
            fi
            docker pull $REGISTRY/$IMAGE_NAME:latest
            docker compose up -d
