name: Deploy to Production

on:
  push:
    branches: [ main ]

env:
  REGISTRY: "registry.digitalocean.com/directdiary"
  IMAGE_NAME: "mp-emailer"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Setup SSH Keys and known_hosts
      - name: Setup SSH Keys and known_hosts
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.DO_SSH_KEY }}

      # Cache npm dependencies
      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-cache-

      # Cache Go modules
      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-mod-

      # Install doctl
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DOAT }}

      # Build and push image
      - name: Build and push
        env:
          DOCKER_BUILDKIT: 1
        run: |
          docker build -t $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7) .
          docker build -t $(echo $REGISTRY)/$(echo $IMAGE_NAME):latest .
          doctl registry login
          docker push $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)
          docker push $(echo $REGISTRY)/$(echo $IMAGE_NAME):latest

      # Debug - Print DO_HOST and DO_USERNAME
      - name: "Debug Print DO_HOST and DO_USERNAME"
        run: |
          echo 'DO_HOST: '"${{ secrets.DO_HOST }}"
          echo 'DO_USERNAME: '"${{ secrets.DO_USERNAME }}"

      # Deploy to DO droplet
      - name: Deploy to DigitalOcean
        uses: appleboy/ssh-action@v1.1.0
        env:
          REGISTRY: ${{ env.REGISTRY }}
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USERNAME }}
          key: ${{ secrets.DO_SSH_KEY }}
          port: 22
          envs: REGISTRY,IMAGE_NAME
          script: |
            cd ~/mp-emailer
            docker pull $REGISTRY/$IMAGE_NAME:latest
            docker compose down
            docker compose up -d
