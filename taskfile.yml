version: '3'

dotenv: ['.env']

vars:
  BINARY_NAME: mp-emailer
  GO_FILES: '$(find . -name "*.go" -type f -not -path "./vendor/*")'
  BIN_DIR: bin
  DB_URL: mysql://{{.DB_USER}}:{{.DB_PASS}}@tcp({{.DB_HOST}}:{{.DB_PORT}})/{{.DB_NAME}}

tasks:
  default:
    cmds:
      - task: run

  build:
    desc: Build the application
    cmds:
      - mkdir -p {{.BIN_DIR}}
      - go build -o {{.BIN_DIR}}/{{.BINARY_NAME}} main.go

  run:
    desc: Run the application
    deps: [build]
    cmds:
      - ./{{.BIN_DIR}}/{{.BINARY_NAME}}

  test:
    desc: Run tests
    cmds:
      - go test ./... -v

  lint:
    desc: Lint the code
    cmds:
      - golangci-lint run

  fmt:
    desc: Format the code
    cmds:
      - gofmt -s -w {{.GO_FILES}}

  clean:
    desc: Clean build artifacts
    cmds:
      - rm -rf {{.BIN_DIR}}

  all:
    desc: Run all tasks (lint, test, build)
    cmds:
      - task: lint
      - task: test
      - task: build

  migrate-up:
    desc: Run all up migrations
    cmds:
      - migrate -database "{{.DB_URL}}" -path ./migrations up

  migrate-down:
    desc: Run all down migrations
    cmds:
      - migrate -database "{{.DB_URL}}" -path ./migrations down {{.CLI_ARGS}}

  migrate-up-one:
    desc: Run one up migration
    cmds:
      - migrate -database "{{.DB_URL}}" -path ./migrations up 1

  migrate-down-one:
    desc: Run one down migration
    cmds:
      - migrate -database "{{.DB_URL}}" -path ./migrations down 1

  migrate-force:
    desc: Force set migration version
    cmds:
      - migrate -database "{{.DB_URL}}" -path ./migrations force {{.CLI_ARGS}}

  migrate-version:
    desc: Show current migration version
    cmds:
      - migrate -database "{{.DB_URL}}" -path ./migrations version

  mailpit-logs:
    desc: View Mailpit logs
    cmds:
      - docker-compose -f .devcontainer/docker-compose.yml logs -f mailpit

  dev:
    desc: Run the application with live reloading
    cmds:
      - air

  frontend-install:
    dir: web
    cmds:
      - npm install

  frontend-build:
    dir: web
    cmds:
      - npm run build

  frontend-dev:
    dir: web
    cmds:
      - npm run dev
